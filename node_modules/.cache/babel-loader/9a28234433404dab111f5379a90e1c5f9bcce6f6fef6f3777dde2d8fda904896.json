{"ast":null,"code":"import React from\"react\";import GooglePayButton from'@google-pay/button-react';import{jsx as _jsx}from\"react/jsx-runtime\";export default function GooglePay(){return/*#__PURE__*/_jsx(GooglePayButton,{className:\"google\",environment:\"TEST\",buttonColor:\"black\",buttonType:\"buy\",buttonLocale:\"en\",buttonSizeMode:\"fill\",style:{width:271,height:57},paymentRequest:{apiVersion:2,apiVersionMinor:0,allowedPaymentMethods:[{type:'CARD',parameters:{allowedAuthMethods:['PAN_ONLY','CRYPTOGRAM_3DS'],allowedCardNetworks:['MASTERCARD','VISA']},tokenizationSpecification:{type:'PAYMENT_GATEWAY',parameters:{gateway:'example',gatewayMerchantId:'exampleGatewayMerchantId'}}}],merchantInfo:{merchantId:'12345678901234567890',merchantName:'Demo Merchant'},transactionInfo:{totalPriceStatus:'FINAL',totalPriceLabel:'Total',totalPrice:'100.00',currencyCode:'USD',countryCode:'US'}},onLoadPaymentData:function onLoadPaymentData(paymentRequest){console.log('load payment data',paymentRequest);}});}","map":{"version":3,"names":["React","GooglePayButton","GooglePay","width","height","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","currencyCode","countryCode","paymentRequest","console","log"],"sources":["C:/Users/UTENTE/Desktop/GitHub/MyMoviesRent/src/componentChild/googlePay.jsx"],"sourcesContent":["import React from \"react\";\r\nimport GooglePayButton from '@google-pay/button-react'\r\nexport default function GooglePay(){\r\n    return (\r\n        <GooglePayButton className='google'\r\n        environment=\"TEST\"\r\n        buttonColor=\"black\"\r\n        buttonType=\"buy\"\r\n        buttonLocale=\"en\"\r\n        buttonSizeMode=\"fill\"\r\n        style={{width: 271, height: 57}}\r\n        paymentRequest={{\r\n          apiVersion: 2,\r\n          apiVersionMinor: 0,\r\n          allowedPaymentMethods: [\r\n            {\r\n              type: 'CARD',\r\n              parameters: {\r\n                allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n              },\r\n              tokenizationSpecification: {\r\n                type: 'PAYMENT_GATEWAY',\r\n                parameters: {\r\n                  gateway: 'example',\r\n                  gatewayMerchantId: 'exampleGatewayMerchantId',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          merchantInfo: {\r\n            merchantId: '12345678901234567890',\r\n            merchantName: 'Demo Merchant',\r\n          },\r\n          transactionInfo: {\r\n            totalPriceStatus: 'FINAL',\r\n            totalPriceLabel: 'Total',\r\n            totalPrice: '100.00',\r\n            currencyCode: 'USD',\r\n            countryCode: 'US',\r\n          },\r\n        }}\r\n        onLoadPaymentData={paymentRequest => {\r\n          console.log('load payment data', paymentRequest);\r\n        }}\r\n      />\r\n    )\r\n}"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,gBAAe,KAAM,0BAA0B,4CACtD,cAAe,SAASC,UAAS,EAAE,CAC/B,mBACI,KAAC,eAAe,EAAC,SAAS,CAAC,QAAQ,CACnC,WAAW,CAAC,MAAM,CAClB,WAAW,CAAC,OAAO,CACnB,UAAU,CAAC,KAAK,CAChB,YAAY,CAAC,IAAI,CACjB,cAAc,CAAC,MAAM,CACrB,KAAK,CAAE,CAACC,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAE,CAAE,CAChC,cAAc,CAAE,CACdC,UAAU,CAAE,CAAC,CACbC,eAAe,CAAE,CAAC,CAClBC,qBAAqB,CAAE,CACrB,CACEC,IAAI,CAAE,MAAM,CACZC,UAAU,CAAE,CACVC,kBAAkB,CAAE,CAAC,UAAU,CAAE,gBAAgB,CAAC,CAClDC,mBAAmB,CAAE,CAAC,YAAY,CAAE,MAAM,CAC5C,CAAC,CACDC,yBAAyB,CAAE,CACzBJ,IAAI,CAAE,iBAAiB,CACvBC,UAAU,CAAE,CACVI,OAAO,CAAE,SAAS,CAClBC,iBAAiB,CAAE,0BACrB,CACF,CACF,CAAC,CACF,CACDC,YAAY,CAAE,CACZC,UAAU,CAAE,sBAAsB,CAClCC,YAAY,CAAE,eAChB,CAAC,CACDC,eAAe,CAAE,CACfC,gBAAgB,CAAE,OAAO,CACzBC,eAAe,CAAE,OAAO,CACxBC,UAAU,CAAE,QAAQ,CACpBC,YAAY,CAAE,KAAK,CACnBC,WAAW,CAAE,IACf,CACF,CAAE,CACF,iBAAiB,CAAE,2BAAAC,cAAc,CAAI,CACnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEF,cAAc,CAAC,CAClD,CAAE,EACF,CAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}