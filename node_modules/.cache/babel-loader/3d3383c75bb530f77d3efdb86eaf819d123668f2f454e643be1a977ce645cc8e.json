{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\GitHub\\\\MyMoviesRent\\\\src\\\\pages\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport TopRatePage from '../componentChild/toprate';\nimport Header from '../componentChild/header';\nimport '../style/header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const location = useLocation();\n  const [getData, setGetData] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=efc42faadb8a20858df7818520bb9d80&language=en-US&query=${location.state === 'null' ? 'anche' : location.state.searchMovie}&page=1&include_adult=false`).then(response => response.json()).then(data => setGetData(data.results));\n  }, [location]);\n  const DatadisplayTitle = () => {\n    if (getData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#FFF'\n        },\n        children: \"Sorry no match found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-search\",\n          children: [\"Results for your search  \\\"\", location.state.searchMovie, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories-marigin-search-ctn\",\n          children: getData.map((movie, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: movie.poster_path && /*#__PURE__*/_jsxDEV(TopRatePage, {\n                movie: 'Movie',\n                id: movie.id,\n                ids: movie.ids,\n                url: movie.poster_path === null ? `https://image.tmdb.org/t/p/original/${movie.backdrop_path}` : `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n                isFavorite: movie.isFavorite,\n                title: movie.title,\n                date: movie.release_date,\n                vote: movie.vote_average,\n                overview: movie.overview,\n                state: {\n                  search: 'search',\n                  type: null,\n                  name: null,\n                  title: 'Search',\n                  searchMovie: `${location.state.searchMovie}`\n                },\n                itemCart: {\n                  id: movie.id,\n                  isFavorite: movie.isFavorite,\n                  img: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n                  title: movie.title,\n                  overview: movie.overview,\n                  vote: movie.vote_average,\n                  date: movie.release_date,\n                  price: 2.99,\n                  quantity: 1,\n                  movie: movie.movie,\n                  ids: movie.ids\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 12\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  const [series, setSeries] = useState(false);\n  function setMovie() {\n    setSeries(false);\n  }\n  function setTv() {\n    setSeries(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      movies: setMovie,\n      series: setTv,\n      value: series\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchMovie-ctn\",\n      children: DatadisplayTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Search, \"IncQhEgTXUGSTSocoLVuuXu2h+0=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","TopRatePage","Header","Search","location","getData","setGetData","fetch","state","searchMovie","then","response","json","data","results","DatadisplayTitle","length","color","map","movie","index","poster_path","id","ids","backdrop_path","isFavorite","title","release_date","vote_average","overview","search","type","name","img","vote","date","price","quantity","series","setSeries","setMovie","setTv"],"sources":["C:/Users/UTENTE/Desktop/GitHub/MyMoviesRent/src/pages/search.js"],"sourcesContent":["import React,{useState , useEffect} from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport TopRatePage from '../componentChild/toprate'\r\nimport Header from '../componentChild/header'\r\nimport '../style/header.css' \r\n\r\nexport default function Search(){\r\n \r\n  const location = useLocation()\r\n  const [getData , setGetData] = useState([])\r\n\r\nuseEffect(()=>{\r\n  fetch(`https://api.themoviedb.org/3/search/movie?api_key=efc42faadb8a20858df7818520bb9d80&language=en-US&query=${location.state === 'null' ? 'anche' : location.state.searchMovie}&page=1&include_adult=false`)\r\n  .then(response=>response.json())\r\n  .then(data=>setGetData(data.results))\r\n},[location])\r\n \r\n  const DatadisplayTitle =() =>{\r\n     \r\n     if(getData.length === 0){\r\n      return ( <h1 style={{color:'#FFF'}}>Sorry no match found</h1> )\r\n     }else{\r\n        return (<>\r\n             <h1 className='title-search'>Results for your search  \"{location.state.searchMovie}\"</h1>\r\n          <div className='categories-marigin-search-ctn'>\r\n               { getData.map((movie,index) => { \r\n          \r\n          return (<>\r\n          {movie.poster_path && \r\n           <TopRatePage\r\n           key={index}\r\n           movie={'Movie'}\r\n           id={movie.id}\r\n           ids={movie.ids}\r\n           url={movie.poster_path === null ?`https://image.tmdb.org/t/p/original/${movie.backdrop_path}` :`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n           isFavorite={movie.isFavorite}\r\n           title={movie.title}\r\n           date={movie.release_date}\r\n           vote={movie.vote_average}\r\n           overview={ movie.overview }\r\n    \r\n           state={{search :'search' ,type:null ,\r\n                   name : null , title :'Search' , searchMovie : `${location.state.searchMovie}`}}\r\n    \r\n            itemCart={{id : movie.id , isFavorite : movie.isFavorite , img : `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\r\n                       title : movie.title ,overview : movie.overview , vote : movie.vote_average , date : movie.release_date,\r\n                       price:2.99 ,quantity : 1 ,movie:movie.movie ,ids :movie.ids}} />}</>\r\n          )\r\n    })}\r\n          </div></>\r\n        )\r\n     }\r\n     \r\n    \r\n    \r\n  }\r\n  const [series ,setSeries] = useState(false)  \r\n  function setMovie(){ setSeries(false)  }\r\n  function setTv(){ setSeries(true)  }\r\n  return (<>\r\n     <Header movies={setMovie} series={setTv} value={series} />\r\n    <div className='searchMovie-ctn'>\r\n    {DatadisplayTitle()}\r\n           </div>\r\n           </> )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}